#!/usr/bin/python
"""
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""
import itertools


def fib():
    a = 0
    b = 1
    while True:
        a, b = b, b + a
        yield b


def fibmax(maxval):
    f = fib()
    r = next(f)
    while r < maxval:
        yield r
        r = next(f)


def fibevenmax(maxval):
    for r in fibmax(maxval):
        if r % 2 == 0:
            yield r


def fibevenmax2(maxval):
    # skip first, then every third is even
    return itertools.islice(fibmax(maxval), 1, None, 3)

print(sum(fibevenmax(4000000)))
print(sum(fibevenmax2(4000000)))
